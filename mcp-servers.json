{
    "servers": [
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "GitHub",
            "description": "GitHub's official MCP Server that connects AI tools directly to GitHub's platform. Provides AI agents, assistants, and chatbots the ability to read repositories and code files, manage issues and PRs, analyze code, and automate workflows through natural language interactions.",
            "status": "active",
            "repository": {
                "url": "https://github.com/github/github-mcp-server",
                "source": "github"
            },
            "version": "0.15.0",
            "packages": [
                {
                    "registry_type": "oci",
                    "registry_base_url": "https://ghcr.io",
                    "identifier": "ghcr.io/github/github-mcp-server",
                    "version": "0.15.0",
                    "transport": {
                        "type": "stdio"
                    },
                    "runtime_hint": "docker",
                    "runtime_arguments": [
                        {
                            "type": "positional",
                            "value": "run"
                        },
                        {
                            "type": "positional",
                            "value": "-i"
                        },
                        {
                            "type": "positional",
                            "value": "--rm"
                        },
                        {
                            "type": "named",
                            "name": "-e",
                            "value": "GITHUB_PERSONAL_ACCESS_TOKEN"
                        },
                        {
                            "type": "positional",
                            "value": "ghcr.io/github/github-mcp-server"
                        }
                    ],
                    "environment_variables": [
                        {
                            "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
                            "description": "GitHub Personal Access Token",
                            "is_required": true,
                            "is_secret": true
                        }
                    ]
                }
            ],
            "remotes": [
                {
                    "transport_type": "streamable-http",
                    "url": "https://api.githubcopilot.com/mcp/"
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "d4e5f6g7-h8i9-0123-defg-456789012345",
                    "published_at": "2025-09-14T00:00:00.000Z",
                    "updated_at": "2025-09-14T00:00:00.000Z",
                    "is_latest": true
                }
            }
        },
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "Code Runner",
            "description": "Code Runner MCP Server for running code snippets and showing results. Supports multiple programming languages including JavaScript, Python, PHP, Ruby, Go, and many more.",
            "status": "active",
            "repository": {
                "url": "https://github.com/formulahendry/mcp-server-code-runner",
                "source": "github"
            },
            "version": "0.1.8",
            "packages": [
                {
                    "registry_type": "npm",
                    "registry_base_url": "https://registry.npmjs.org",
                    "identifier": "mcp-server-code-runner",
                    "version": "0.1.8",
                    "transport": {
                        "type": "stdio"
                    }
                }
            ],
            "remotes": [
                {
                    "type": "streamable-http",
                    "url": "https://code-runner-mcp.azurewebsites.net/mcp"
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
                    "published_at": "2025-09-13T00:00:00.000Z",
                    "updated_at": "2025-09-13T00:00:00.000Z",
                    "is_latest": true
                }
            }
        },
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "Microsoft Learn",
            "description": "Microsoft Learn MCP Server provides access to Microsoft's official documentation and technical resources. Search and retrieve content from Microsoft Learn using semantic search and fetch full documentation pages in markdown format.",
            "status": "active",
            "repository": {
                "url": "https://github.com/MicrosoftDocs/mcp",
                "source": "github"
            },
            "version": "1.0.0",
            "remotes": [
                {
                    "type": "streamable-http",
                    "url": "https://learn.microsoft.com/api/mcp"
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                    "published_at": "2025-09-13T00:00:00.000Z",
                    "updated_at": "2025-09-13T00:00:00.000Z",
                    "is_latest": true
                }
            }
        },
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "Playwright",
            "description": "Playwright MCP Server provides browser automation capabilities using Playwright. Enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models. Fast, lightweight, and deterministic tool application.",
            "status": "active",
            "repository": {
                "url": "https://github.com/microsoft/playwright-mcp",
                "source": "github"
            },
            "version": "0.0.37",
            "packages": [
                {
                    "registry_type": "npm",
                    "registry_base_url": "https://registry.npmjs.org",
                    "identifier": "@playwright/mcp",
                    "version": "0.0.37",
                    "transport": {
                        "type": "stdio"
                    }
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "b2c3d4e5-f6g7-8901-bcde-f23456789012",
                    "published_at": "2025-09-13T00:00:00.000Z",
                    "updated_at": "2025-09-13T00:00:00.000Z",
                    "is_latest": true
                }
            }
        },
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "Azure",
            "description": "Azure MCP Server implements the MCP specification to create a seamless connection between AI agents and Azure services. Provides comprehensive Azure service management including storage, databases, AI services, monitoring, and more. Supercharges your agents with Azure context.",
            "status": "active",
            "repository": {
                "url": "https://github.com/microsoft/mcp",
                "source": "github",
                "subfolder": "servers/Azure.Mcp.Server"
            },
            "version": "0.6.0",
            "packages": [
                {
                    "registry_type": "npm",
                    "registry_base_url": "https://registry.npmjs.org",
                    "identifier": "@azure/mcp",
                    "version": "0.6.0",
                    "transport": {
                        "type": "stdio"
                    },
                    "package_arguments": [
                        {
                            "type": "positional",
                            "value": "server"
                        },
                        {
                            "type": "positional",
                            "value": "start"
                        }
                    ]
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "c3d4e5f6-g7h8-9012-cdef-345678901234",
                    "published_at": "2025-09-13T00:00:00.000Z",
                    "updated_at": "2025-09-13T00:00:00.000Z",
                    "is_latest": true
                }
            }
        },
        {
            "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
            "name": "Context7",
            "description": "Context7 MCP Server provides up-to-date, version-specific documentation and code examples for libraries and frameworks. Enables LLMs to access current library documentation, resolving generic library names to Context7-compatible IDs and fetching comprehensive docs to eliminate outdated code generation.",
            "status": "active",
            "repository": {
                "url": "https://github.com/upstash/context7",
                "source": "github"
            },
            "version": "1.0.17",
            "packages": [
                {
                    "registry_type": "npm",
                    "registry_base_url": "https://registry.npmjs.org",
                    "identifier": "@upstash/context7-mcp",
                    "version": "1.0.17",
                    "transport": {
                        "type": "stdio"
                    },
                    "package_arguments": [
                        {
                            "type": "named",
                            "name": "--api-key",
                            "value": "{CONTEXT7_API_KEY}",
                            "description": "Context7 API Key for higher rate limits (optional)",
                            "is_required": false
                        }
                    ]
                }
            ],
            "remotes": [
                {
                    "transport_type": "streamable-http",
                    "url": "https://mcp.context7.com/mcp",
                    "headers": [
                        {
                            "name": "CONTEXT7_API_KEY",
                            "description": "Context7 API Key for higher rate limits (optional)",
                            "is_required": false,
                            "is_secret": true
                        }
                    ]
                }
            ],
            "_meta": {
                "io.modelcontextprotocol.registry/official": {
                    "id": "e5f6g7h8-i9j0-1234-efgh-567890123456",
                    "published_at": "2025-09-14T00:00:00.000Z",
                    "updated_at": "2025-09-14T00:00:00.000Z",
                    "is_latest": true
                }
            }
        }
    ]
}